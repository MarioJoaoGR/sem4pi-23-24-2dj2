@startuml
'https://plantuml.com/sequence-diagram


actor CustomerManager

participant SelectJobRequirementSpecificationForJobOpeningUI <<presentation>>
participant SelectJobRequirementSpecificationForJobOpeningController <<application>>
participant PersistenceContext
participant RepositoryFactory
participant JobOpeningRepository <<repository>>
participant JobRequirementSpecificationRepository <<repository>>
participant JobOpening <<domain>>

-> SelectJobRequirementSpecificationForJobOpeningUI: doShow()
activate SelectJobRequirementSpecificationForJobOpeningUI
SelectJobRequirementSpecificationForJobOpeningUI -> SelectJobRequirementSpecificationForJobOpeningController : create
SelectJobRequirementSpecificationForJobOpeningUI -> SelectJobRequirementSpecificationForJobOpeningController : listJobOpenings()
activate SelectJobRequirementSpecificationForJobOpeningController
SelectJobRequirementSpecificationForJobOpeningController -> PersistenceContext : repositories()
PersistenceContext -> RepositoryFactory : create
RepositoryFactory -> JobOpeningRepository : jobOpenings()
SelectJobRequirementSpecificationForJobOpeningController -> JobOpeningRepository : findAll()
activate JobOpeningRepository
JobOpeningRepository --> SelectJobRequirementSpecificationForJobOpeningController : List<JobOpening>
deactivate JobOpeningRepository
SelectJobRequirementSpecificationForJobOpeningController --> SelectJobRequirementSpecificationForJobOpeningUI : List<JobOpening>
deactivate SelectJobRequirementSpecificationForJobOpeningController

SelectJobRequirementSpecificationForJobOpeningUI --> CustomerManager : shows list of Job Openings\nand asks to select one
CustomerManager -> SelectJobRequirementSpecificationForJobOpeningUI : selects one Job Opening

SelectJobRequirementSpecificationForJobOpeningUI -> SelectJobRequirementSpecificationForJobOpeningController : listJobRequirementsSpecification()
activate SelectJobRequirementSpecificationForJobOpeningController
SelectJobRequirementSpecificationForJobOpeningController -> PersistenceContext : repositories()
PersistenceContext -> RepositoryFactory : create
RepositoryFactory -> JobRequirementSpecificationRepository : create
SelectJobRequirementSpecificationForJobOpeningController -> JobRequirementSpecificationRepository : findAll()
activate JobRequirementSpecificationRepository
JobRequirementSpecificationRepository --> SelectJobRequirementSpecificationForJobOpeningController : List<JobRequirementSpecification>
deactivate JobRequirementSpecificationRepository
SelectJobRequirementSpecificationForJobOpeningController --> SelectJobRequirementSpecificationForJobOpeningUI : List<JobRequirementSpecification>
deactivate SelectJobRequirementSpecificationForJobOpeningController

SelectJobRequirementSpecificationForJobOpeningUI --> CustomerManager : shows list of Job Requirements\nSpecification and asks to select one
CustomerManager -> SelectJobRequirementSpecificationForJobOpeningUI : selects one Job \nRequirement Specification

SelectJobRequirementSpecificationForJobOpeningUI -> SelectJobRequirementSpecificationForJobOpeningController : selectJobRequirementSpecificationForJobOpening(jobRequirementSpecification, jobOpening)
activate SelectJobRequirementSpecificationForJobOpeningController
SelectJobRequirementSpecificationForJobOpeningController -> JobOpening : selectJobRequirementSpecification(jobRequirementSpecification)
SelectJobRequirementSpecificationForJobOpeningController -> PersistenceContext : repositories()
PersistenceContext -> RepositoryFactory : create
RepositoryFactory -> JobOpeningRepository : create
SelectJobRequirementSpecificationForJobOpeningController -> JobOpeningRepository : save(jobOpening)
activate JobOpeningRepository
JobOpeningRepository --> SelectJobRequirementSpecificationForJobOpeningController : jobOpening
deactivate JobOpeningRepository
SelectJobRequirementSpecificationForJobOpeningController --> SelectJobRequirementSpecificationForJobOpeningUI : jobOpening
deactivate SelectJobRequirementSpecificationForJobOpeningController

SelectJobRequirementSpecificationForJobOpeningUI --> CustomerManager : backs to menu



@enduml