@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor CustomerManager
participant GetOrderedListOfCandidatesUI <<presentation>>
participant GetOrderedListOfCandidatesController <<application>>
participant GetOrderedListOfCandidatesService <<service>>
participant JobOpeningRepository <<repository>>
participant JobApplicationRepository <<repository>>
participant JobApplication <<domain>>
participant Candidate <<domain>>

activate CustomerManager
CustomerManager -> GetOrderedListOfCandidatesUI : asks to get an ordered list of\ncandidates based in interview points
activate GetOrderedListOfCandidatesUI
GetOrderedListOfCandidatesUI -> GetOrderedListOfCandidatesController : jobOpeningsInAnalysisPhaseAndHadInterviewPhase()
activate GetOrderedListOfCandidatesController
GetOrderedListOfCandidatesController -> JobOpeningRepository : findJobOpeningInAnalysisPhaseAndHadInterviewPhase()
activate JobOpeningRepository
JobOpeningRepository --> GetOrderedListOfCandidatesController : jobOpenings
deactivate JobOpeningRepository
GetOrderedListOfCandidatesController --> GetOrderedListOfCandidatesUI : jobOpenings
deactivate GetOrderedListOfCandidatesController
GetOrderedListOfCandidatesUI --> CustomerManager : shows list of job openings in \nanalysis phase and had an\ninterview phase and asks to select
CustomerManager -> GetOrderedListOfCandidatesUI : selects a job opening
GetOrderedListOfCandidatesUI -> GetOrderedListOfCandidatesController : orderCandidatesBasedOnInterviewPoints(jobOpening)
activate GetOrderedListOfCandidatesController
GetOrderedListOfCandidatesController -> JobApplicationRepository : findJobApplicationsForJobOpening(jobOpening)
activate JobApplicationRepository
JobApplicationRepository --> GetOrderedListOfCandidatesController : jobApplications
deactivate JobApplicationRepository
GetOrderedListOfCandidatesController -> GetOrderedListOfCandidatesService : orderCandidatesBasedOnInterviewPoints(jobApplications)
activate GetOrderedListOfCandidatesService
GetOrderedListOfCandidatesService -> GetOrderedListOfCandidatesService : orderJobApplicationsBasedOnInterviewPoints(jobApplications)
activate GetOrderedListOfCandidatesService
GetOrderedListOfCandidatesService --> GetOrderedListOfCandidatesService : orderedApplications
deactivate GetOrderedListOfCandidatesService
loop for each job application
GetOrderedListOfCandidatesService -> JobApplication : candidate()
activate JobApplication
JobApplication -> Candidate : candidate()
activate Candidate
Candidate --> JobApplication : candidate
deactivate Candidate
JobApplication --> GetOrderedListOfCandidatesService : candidate
deactivate JobApplication
end loop
GetOrderedListOfCandidatesService --> GetOrderedListOfCandidatesController : orderedCandidates
deactivate GetOrderedListOfCandidatesService
GetOrderedListOfCandidatesController --> GetOrderedListOfCandidatesUI : orderedCandidates
deactivate GetOrderedListOfCandidatesController



deactivate JobApplicationRepository

GetOrderedListOfCandidatesUI --> CustomerManager : shows ordered list of candidates based\nin interview points and backs to menu
deactivate GetOrderedListOfCandidatesUI

@enduml